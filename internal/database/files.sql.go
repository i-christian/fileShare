// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: files.sql

package database

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
	"github.com/lib/pq"
)

const createFile = `-- name: CreateFile :one
insert into files (user_id, filename, storage_key, mime_type, size_bytes, checksum)
    values($1, $2, $3, $4, $5, $6)
returning file_id, user_id, filename, storage_key, mime_type, size_bytes, visibility, thumbnail_key, checksum, tags, is_deleted, deleted_at, created_at, updated_at
`

type CreateFileParams struct {
	UserID     uuid.UUID      `json:"user_id"`
	Filename   string         `json:"filename"`
	StorageKey string         `json:"storage_key"`
	MimeType   string         `json:"mime_type"`
	SizeBytes  int64          `json:"size_bytes"`
	Checksum   sql.NullString `json:"checksum"`
}

func (q *Queries) CreateFile(ctx context.Context, arg CreateFileParams) (File, error) {
	row := q.queryRow(ctx, q.createFileStmt, createFile,
		arg.UserID,
		arg.Filename,
		arg.StorageKey,
		arg.MimeType,
		arg.SizeBytes,
		arg.Checksum,
	)
	var i File
	err := row.Scan(
		&i.FileID,
		&i.UserID,
		&i.Filename,
		&i.StorageKey,
		&i.MimeType,
		&i.SizeBytes,
		&i.Visibility,
		&i.ThumbnailKey,
		&i.Checksum,
		pq.Array(&i.Tags),
		&i.IsDeleted,
		&i.DeletedAt,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
